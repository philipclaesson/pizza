(()=>{"use strict";const t=6,n={flour:{amount:1e3,unit:"g"},water:{amount:7,unit:"dl"},yeast:{amount:6,unit:"g",alternativeAmount:2.5,alternativeUnit:"ml"},salt:{amount:5,unit:"tsp"}};function e(t){return Math.round(2*t)/2}function a(t){let n=`${t.amount} ${t.unit}`;return t.alternativeAmount&&t.alternativeUnit&&(n+=` (${t.alternativeAmount} ${t.alternativeUnit})`),n}function i(){const i=document.getElementById("pizza-slider"),o=parseInt(i.value),u=document.getElementById("pizza-count");u&&(u.textContent=o.toString());const r=function(a){const i=a/t,o={};for(const[t,a]of Object.entries(n)){const n=a.amount*i;if("tsp"===a.unit){const a=(u=n)>=3?{amount:e(u/3),unit:"tbsp"}:{amount:e(u),unit:"tsp"};o[t]={amount:a.amount,unit:a.unit}}else o[t]={amount:e(n),unit:a.unit};"alternativeAmount"in a&&"alternativeUnit"in a&&void 0!==a.alternativeAmount&&void 0!==a.alternativeUnit&&(o[t].alternativeAmount=e(a.alternativeAmount*i),o[t].alternativeUnit=a.alternativeUnit)}var u;return{pizzas:a,ingredients:o}}(o),m=document.getElementById("flour-amount"),l=document.getElementById("water-amount"),s=document.getElementById("yeast-amount"),d=document.getElementById("salt-amount");m&&(m.textContent=a(r.ingredients.flour)),l&&(l.textContent=a(r.ingredients.water)),s&&(s.textContent=a(r.ingredients.yeast)),d&&(d.textContent=a(r.ingredients.salt))}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("pizza-slider");t&&(t.value="6",t.addEventListener("input",i),i())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,